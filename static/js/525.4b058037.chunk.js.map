{"version":3,"file":"static/js/525.4b058037.chunk.js","mappings":"sSAAMA,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,oBACad,IAGrC,SAASe,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,IAG7C,SAASgB,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,EADrB,2BAIxB,SAASiB,EAAoBC,GAClC,OAAOhB,EAAuB,GAAD,OACxBD,EADwB,+BACOiB,EADP,oBACwBlB,EADxB,2B,8HC9BlBmB,EAASC,EAAAA,EAAAA,OAAH,gQAeNC,EAAQD,EAAAA,EAAAA,MAAH,wG,SCdH,SAASE,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SAChCC,GAAWC,EAAAA,EAAAA,MAIf,OACC,SAACN,EAAD,CAAQO,KAAK,SAASC,QAJN,WAAO,IAAD,IACtBH,EAAQ,iBAACD,QAAD,IAACA,GAAD,UAACA,EAAUK,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,MAGlC,UACC,SAACR,EAAD,wBCLH,IAAMS,GAAeC,EAAAA,EAAAA,OAAK,kBACzB,gCAEc,SAASC,IACvB,IAAMT,GAAWU,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACTC,EAAAA,GAA4BN,GAAQO,MAAK,SAACC,GAAD,OAAOJ,EAAQI,QACtD,CAACR,KAGH,iCACC,SAACZ,EAAD,CAAYC,SAAUA,KACtB,SAAC,EAAAoB,SAAD,CAAUC,UAAU,8CAApB,SACEP,IAAQ,SAACP,EAAD,CAAcO,KAAMA,OAE9B,SAAC,KAAD","sources":["services/movies-api.js","components/BackButton/BackButton.styled.jsx","components/BackButton/BackButton.jsx","views/FilmDetailsView.jsx"],"sourcesContent":["const API_KEY = \"9aaadf590dc90bb88adc9b4200a95438\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingFilms() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchFilmsDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\nexport function fetchSearchingFilms(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n\tdisplay: inline-block;\r\n\tmargin-top: 20px;\r\n\tmargin-bottom: 32px;\r\n\tpadding: 10px 12px;\r\n\tborder: 0;\r\n\tborder-radius: 4px;\r\n\tbackground-color: grey;\r\n\tcursor: pointer;\r\n\topacity: 0.6;\r\n\r\n\t&:hover {\r\n\t\topacity: 1;\r\n\t}\r\n`;\r\nexport const Label = styled.label`\r\n\tfont-size: 18px;\r\n\tfont-weight: 500;\r\n\tcursor: pointer;\r\n\tcolor: #dc0088;\r\n`;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { Button, Label } from \"./BackButton.styled\";\r\n\r\nexport default function BackButton({ location }) {\r\n\tlet navigate = useNavigate();\r\n\tconst onGoBack = () => {\r\n\t\tnavigate(location?.state?.from ?? \"/\");\r\n\t};\r\n\treturn (\r\n\t\t<Button type=\"button\" onClick={onGoBack}>\r\n\t\t\t<Label>Go Back</Label>\r\n\t\t</Button>\r\n\t);\r\n}\r\n","import { useState, useEffect, lazy, Suspense } from \"react\";\r\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\r\nimport * as moviesAPI from \"../services/movies-api\";\r\nimport BackButton from \"../components/BackButton/BackButton\";\r\n\r\nconst FilmDataCard = lazy(() =>\r\n\timport(\"../components/FilmDataCard/FilmDataCard.jsx\")\r\n);\r\nexport default function FilmDetailsView() {\r\n\tconst location = useLocation();\r\n\tconst { filmId } = useParams();\r\n\tconst [film, setFilm] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tmoviesAPI.fetchFilmsDetails(filmId).then((r) => setFilm(r));\r\n\t}, [filmId]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<BackButton location={location} />\r\n\t\t\t<Suspense fallback={<h4>Loading film-data</h4>}>\r\n\t\t\t\t{film && <FilmDataCard film={film} />}\r\n\t\t\t</Suspense>\r\n\t\t\t<Outlet />\r\n\t\t</>\r\n\t);\r\n}\r\n"],"names":["API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingFilms","fetchFilmsDetails","movieId","fetchFilmsCredits","fetchFilmsReviews","fetchSearchingFilms","query","Button","styled","Label","BackButton","location","navigate","useNavigate","type","onClick","state","from","FilmDataCard","lazy","FilmDetailsView","useLocation","filmId","useParams","useState","film","setFilm","useEffect","moviesAPI","then","r","Suspense","fallback"],"sourceRoot":""}