{"version":3,"file":"static/js/829.db099120.chunk.js","mappings":"oPAEaA,EAAWC,EAAAA,EAAAA,GAAH,oEAIRC,EAAaD,EAAAA,EAAAA,GAAH,sBACVE,EAAaF,EAAAA,EAAAA,GAAH,qGAKVG,EAAaH,EAAAA,EAAAA,GAAH,oE,SCPR,SAASI,IACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAAXD,OACN,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACTC,EAAAA,GAA4BN,GAAQO,MAAK,SAACC,GACzCJ,EAAWI,EAAEC,cAEZ,CAACT,KAEH,iCACC,SAACN,EAAD,uBACA,SAACE,EAAD,UACqB,IAAnBO,EAAQO,OACRP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,UAACjB,EAAD,YACC,UAACC,EAAD,sBAAqBe,MACrB,uBAAIC,MAFYF,OAMlB,iE,oLCzBCG,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,oBACad,IAGrC,SAASe,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,IAG7C,SAASgB,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,EADrB,2BAIxB,SAASiB,EAAoBC,GAClC,OAAOhB,EAAuB,GAAD,OACxBD,EADwB,+BACOiB,EADP,oBACwBlB,EADxB","sources":["components/Review/Review.styled.jsx","components/Review/Review.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const AddTitle = styled.h5`\r\n\tmargin-bottom: 20px;\r\n\tfont-size: 22px;\r\n`;\r\nexport const ReviewList = styled.ul``;\r\nexport const ReviewItem = styled.li`\r\n\tmargin-bottom: 16px;\r\n\tlist-style-position: inside;\r\n\tlist-style: none;\r\n`;\r\nexport const AuthorName = styled.li`\r\n\tmargin-bottom: 20px;\r\n\tfont-size: 22px;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as moviesAPI from \"../../services/movies-api\";\r\nimport { AddTitle, ReviewList, ReviewItem, AuthorName } from \"./Review.styled\";\r\n\r\nexport default function Reviews() {\r\n\tlet { filmId } = useParams();\r\n\tconst [reviews, setReviews] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tmoviesAPI.fetchFilmsReviews(filmId).then((r) => {\r\n\t\t\tsetReviews(r.results);\r\n\t\t});\r\n\t}, [filmId]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AddTitle>Reviews</AddTitle>\r\n\t\t\t<ReviewList>\r\n\t\t\t\t{reviews.length !== 0 ? (\r\n\t\t\t\t\treviews.map(({ id, author, content }) => (\r\n\t\t\t\t\t\t<ReviewItem key={id}>\r\n\t\t\t\t\t\t\t<AuthorName>Author: {author}</AuthorName>\r\n\t\t\t\t\t\t\t<p>{content}</p>\r\n\t\t\t\t\t\t</ReviewItem>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>We haven't had any reviews yet</p>\r\n\t\t\t\t)}\r\n\t\t\t</ReviewList>\r\n\t\t</>\r\n\t);\r\n}\r\n","const API_KEY = \"9aaadf590dc90bb88adc9b4200a95438\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingFilms() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchFilmsDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\nexport function fetchSearchingFilms(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`\n  );\n}\n"],"names":["AddTitle","styled","ReviewList","ReviewItem","AuthorName","Reviews","filmId","useParams","useState","reviews","setReviews","useEffect","moviesAPI","then","r","results","length","map","id","author","content","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingFilms","fetchFilmsDetails","movieId","fetchFilmsCredits","fetchFilmsReviews","fetchSearchingFilms","query"],"sourceRoot":""}