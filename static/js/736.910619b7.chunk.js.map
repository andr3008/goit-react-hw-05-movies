{"version":3,"file":"static/js/736.910619b7.chunk.js","mappings":"gPAEaA,EAAQC,EAAAA,EAAAA,GAAH,oEAILC,EAAWD,EAAAA,EAAAA,GAAH,wR,kBCAN,SAASE,IACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAAXD,OACN,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACTC,EAAAA,GAA4BN,GAAQO,MAAK,SAACC,GACzCJ,EAAQI,EAAEL,WAET,CAACH,KAEH,iCACC,SAACJ,EAAD,oBACA,SAACE,EAAD,UACEK,EAAKM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACT,2BACC,gBACCC,IACCH,EAAY,yCACyBA,GAClCI,EAEJC,IAAK,CAAEJ,KAAAA,MAGR,uCAAeC,MACf,uBAAID,MAXIF,a,oLCnBRO,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,oBACad,IAGrC,SAASe,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,IAG7C,SAASgB,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,EADrB,2BAIxB,SAASiB,EAAoBC,GAClC,OAAOhB,EAAuB,GAAD,OACxBD,EADwB,+BACOiB,EADP,oBACwBlB,EADxB,2B","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movies-api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h3`\r\n\tmargin-bottom: 20px;\r\n\tfont-size: 22px;\r\n`;\r\nexport const CastList = styled.ul`\r\n\tdisplay: grid;\r\n\tmax-width: calc(100vw - 48px);\r\n\tgrid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n\tgrid-gap: 16px;\r\n\tmargin-top: 0;\r\n\tmargin-bottom: 0;\r\n\tpadding: 0;\r\n\tlist-style: none;\r\n\tmargin-left: auto;\r\n\tmargin-right: auto;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport * as moviesAPI from \"../../services/movies-api\";\r\nimport { Title, CastList } from \"./Cast.styled\";\r\nimport NotFound from \"../../image/nope-not-here.webp\";\r\n\r\nexport default function Cast() {\r\n\tlet { filmId } = useParams();\r\n\tconst [cast, setCast] = useState([]);\r\n\tuseEffect(() => {\r\n\t\tmoviesAPI.fetchFilmsCredits(filmId).then((r) => {\r\n\t\t\tsetCast(r.cast);\r\n\t\t});\r\n\t}, [filmId]);\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Title>Cast</Title>\r\n\t\t\t<CastList>\r\n\t\t\t\t{cast.map(({ id, profile_path, name, character }) => (\r\n\t\t\t\t\t<li key={id}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\tprofile_path\r\n\t\t\t\t\t\t\t\t\t? `https://image.tmdb.org/t/p/w300${profile_path}`\r\n\t\t\t\t\t\t\t\t\t: NotFound\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talt={{ name }}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<p>Character: {character}</p>\r\n\t\t\t\t\t\t<p>{name}</p>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</CastList>\r\n\t\t</>\r\n\t);\r\n}\r\n","const API_KEY = \"9aaadf590dc90bb88adc9b4200a95438\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingFilms() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchFilmsDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\nexport function fetchSearchingFilms(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`\n  );\n}\n"],"names":["Title","styled","CastList","Cast","filmId","useParams","useState","cast","setCast","useEffect","moviesAPI","then","r","map","id","profile_path","name","character","src","NotFound","alt","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingFilms","fetchFilmsDetails","movieId","fetchFilmsCredits","fetchFilmsReviews","fetchSearchingFilms","query"],"sourceRoot":""}