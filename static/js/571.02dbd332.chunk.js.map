{"version":3,"file":"static/js/571.02dbd332.chunk.js","mappings":"mNAGaA,EAAkBC,EAAAA,EAAAA,GAAH,qFAIfC,EAAYD,EAAAA,EAAAA,GAAH,6KAWTE,GAAYF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,iK,SCdP,SAASI,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC9BC,GAAWC,EAAAA,EAAAA,MACjB,OACC,SAACR,EAAD,UACEM,EAAOG,KAAI,SAACC,GAAD,OACX,SAACR,EAAD,WACC,SAACC,EAAD,CAAWQ,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArD,SACEG,EAAMK,kBAFOL,EAAME,W,oLCTpBI,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,uCACeD,IAIvC,SAASa,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,oBACad,IAGrC,SAASe,EAAkBD,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,IAG7C,SAASgB,EAAkBF,GAChC,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,EADrB,2BAIxB,SAASiB,EAAoBC,GAClC,OAAOhB,EAAuB,GAAD,OACxBD,EADwB,+BACOiB,EADP,oBACwBlB,EADxB,2B,oHC9BlBmB,E,MAAQlC,EAAAA,GAAH,0F,SCGH,SAASmC,IACvB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACTC,EAAAA,KAEEC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WACdF,KAAKH,KACL,KAGF,iCACC,SAACJ,EAAD,2BACCG,IAAS,SAACjC,EAAA,EAAD,CAAYC,OAAQgC","sources":["components/MoviesList/MovieList.styled.jsx","components/MoviesList/MoviesList.jsx","services/movies-api.js","views/HomeView.styled.jsx","views/HomeView.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nexport const TrendMoviesList = styled.ol`\r\n\tlist-style-type: decimal;\r\n\tlist-style-position: inside;\r\n`;\r\nexport const MovieItem = styled.li`\r\n\tpadding-bottom: 8px;\r\n\t&::marker {\r\n\t\tcolor: #2a363b;\r\n\t\tfont-size: 20px;\r\n\t\tfont-weight: 500;\r\n\t}\r\n\t&:hover {\r\n\t\tcolor: #dc0088;\r\n\t}\r\n`;\r\nexport const LinkStyle = styled(Link)`\r\n\tcolor: #2a363b;\r\n\tfont-size: 20px;\r\n\tfont-weight: 500;\r\n\ttext-decoration: none;\r\n\t&:hover,\r\n\t&:focus {\r\n\t\tcolor: #dc0088;\r\n\t}\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { TrendMoviesList, MovieItem, LinkStyle } from \"./MovieList.styled\";\r\n\r\nexport default function MoviesList({ movies }) {\r\n\tconst location = useLocation();\r\n\treturn (\r\n\t\t<TrendMoviesList>\r\n\t\t\t{movies.map((movie) => (\r\n\t\t\t\t<MovieItem key={movie.id}>\r\n\t\t\t\t\t<LinkStyle to={`/movies/${movie.id}`} state={{ from: location }}>\r\n\t\t\t\t\t\t{movie.original_title}\r\n\t\t\t\t\t</LinkStyle>\r\n\t\t\t\t</MovieItem>\r\n\t\t\t))}\r\n\t\t</TrendMoviesList>\r\n\t);\r\n}\r\nMoviesList.propTypes = {\r\n\tmovies: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number.isRequired,\r\n\t\t})\r\n\t),\r\n};\r\n","const API_KEY = \"9aaadf590dc90bb88adc9b4200a95438\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\n\nasync function fetchWithErrorHandling(url = \"\", config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(\"Not found\"));\n}\n\nexport function fetchTrendingFilms() {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n}\n\nexport function fetchFilmsDetails(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsCredits(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n}\nexport function fetchFilmsReviews(movieId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}\nexport function fetchSearchingFilms(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}&include_adult=false`\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h1`\r\n\tpadding-top: 20px;\r\n\tpadding-bottom: 20px;\r\n\tcolor: #dc0088;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport * as moviesAPI from \"../services/movies-api\";\r\nimport MoviesList from \"../components/MoviesList/MoviesList\";\r\nimport { Title } from \"./HomeView.styled\";\r\n\r\nexport default function HomeView() {\r\n\tconst [films, setFilms] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tmoviesAPI\r\n\t\t\t.fetchTrendingFilms()\r\n\t\t\t.then((r) => r.results)\r\n\t\t\t.then(setFilms);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Title>TOP 20 today</Title>\r\n\t\t\t{films && <MoviesList movies={films} />}\r\n\t\t</>\r\n\t);\r\n}\r\n"],"names":["TrendMoviesList","styled","MovieItem","LinkStyle","Link","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","original_title","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingFilms","fetchFilmsDetails","movieId","fetchFilmsCredits","fetchFilmsReviews","fetchSearchingFilms","query","Title","HomeView","useState","films","setFilms","useEffect","moviesAPI","then","r","results"],"sourceRoot":""}